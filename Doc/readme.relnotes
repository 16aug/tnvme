2012-3-8:
nvmecompliance_release=1.2.1 New tests, bug fixes.
    1) Bugfix: Read cmds would have issue operating under real world hardware
       because the DMA direction was not set corrrectly. Under QEMU, this flag
       was ignored.
    2) Added numerous new tests, see git log for details.
    3) Bugfix: Informative::GetFeaturesNumOfIOCQs() and 
       Informative::GetFeaturesNumOfIOSQs() now correctly return 1 based
       values as was always stated in the header file doxygen comment.
    4) All prior issues have been resolved.
    5) Known Issues:
        a) There may be a memory leak within dnvme's ability to free back to 
           the OS any/some of contiguous memory. Evidence shows that looping
           the current state of the tes software runs into the inability to
           allocated contig memory.

2012-3-2:
nvmecompliance_release=1.2.0 Test dependencies, reap delays, enhancements 
    1) Added test dependencies. The test reference number now indicates its
       prerequisites. See 
       https://github.com/nvmecompliance/tnvme/wiki/Test-Numbering
    2) Avoid PRP misuse. Allow the test developer to set PRP requirements, but
       never allow the setting of unsupported requirements for this will only
       lead to a kernel crash. Spec. states this has unknown outcomes.
    3) Aid in seeking bare, meta, e2e namespaces. Many tests will need this
       support, thus it was made available for all as a utility class.
    4) Automate retrieving the get log page error data when the M bit is set
       within a CE.
    5) Added C++ namespace's to avoid name collisions.
    6) Addressed the issue where the log data was becoming too large to handle.
       See file: manage/runtnvme.sh for this support.
    7) Removed the long delays from reap inquiry as was a known issue in the
       previous release.
    8) Known Issues:
        a) A problem has been reported by the community that test case 0:1.1.0
           works correctly under Fedora 2.6.31.5-127.fc12.x86_64 if executed
           within QEMU, however under real hardware the DUT's data never
           appears in user space. This investigation is ongoing.

2012-2-16:
nvmecompliance_release=1.1.0 Added interrupt support; MSI, MSI-X, no pin based
    1) Interrupts supported in tnvme are abstracted from the scheme set within
       dnvme; test leverage the same user space API no matter the setting used
       in dnvme.
    2) Numerous bug fixes; refer to git repo log statements for details.
    3) Major framework enhancements to aid in test development. Ideas were
       generated as a result of feedback via nvmecompliance@intel.com and
       as a result of adding tests cases finding new ways to improve the
       experience.
    4) Updated tnvme/Doc/testPlan.ods with details targetting the architecture
       expected by this framework. The test plan is roughly 40/45% coverage of 
       the 1.0b NVMe specification. Outside sources are encouraged to work on
       the test plan marked as "TBD" since those test still need to be 
       described and coded.
    5) Known Issues:
        a) Reap inquiry takes much longer than it should, and thus test cases
           take longer to complete. This is due to the polling scheme whereby
           tnvme must keep generating IOCTL calls into dnvme until such time
           a CE arrives in the CQ. This should be fixed with a select scheme.
        b) Output files are becoming very large, especially if one --loop the
           test multiple times. Deriving a future scheme to keep only the
           last group of test logging, or maybe the last 1MB of data. Solutions
           are still being discussed.
        c) There is no method of extracting the log page when a CE arrives and
           its More (M) bit is set indicating more data is available. This
           should be handled by default by the framework when more info is
           available by dumpting the data to an output file.

2012-1-23:
vmecompliance_release=1.0.1 Enhancements and bugfixes; added read/write cmds
    1) Planning on supporting interrupts in the future.
    2) Planning on adding tests in the future.

2011-12-23:
nvmecompliance_release=1.0.0 First official release of the NVME compliance suite
